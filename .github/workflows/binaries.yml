name: Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]
        go-os: [ 'darwin', 'linux', 'windows' ]
        go-arch: [ 'amd64', 'arm64' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Download dependencies
        run: go mod download
      - name: Build Unix
        if: ${{ matrix.go-os != 'windows' }}
        run: GOOS=${{ matrix.go-os }} GOARCH=${{ matrix.go-arch }} go build -ldflags="-s -w" -o mailheap-${{ github.ref_name }}-${{ matrix.go-os }}-${{ matrix.go-arch }}
      - name: Build Windows
        if: ${{ matrix.go-os == 'windows' }}
        run: GOOS=${{ matrix.go-os }} GOARCH=${{ matrix.go-arch }} go build -ldflags="-s -w" -o mailheap-${{ github.ref_name }}-${{ matrix.go-os }}-${{ matrix.go-arch }}.exe
      - name: Upload Asset
        if: ${{ matrix.go-os != 'windows' }}
        uses: softprops/action-gh-release@v1
        with:
          files: GOOS=${{ matrix.go-os }} GOARCH=${{ matrix.go-arch }} go build -ldflags="-s -w" -o mailheap-${{ github.ref_name }}-${{ matrix.go-os }}-${{ matrix.go-arch }}
      - name: Upload Asset
        if: ${{ matrix.go-os == 'windows' }}
        uses: softprops/action-gh-release@v1
        with:
          files: GOOS=${{ matrix.go-os }} GOARCH=${{ matrix.go-arch }} go build -ldflags="-s -w" -o mailheap-${{ github.ref_name }}-${{ matrix.go-os }}-${{ matrix.go-arch }}.exe

